{
  "name": "sensortag",
  "version": "1.2.2",
  "description": "Node.js lib for the TI SensorTag",
  "main": "index.js",
  "scripts": {
    "test": "jshint lib/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sandeepmistry/node-sensortag.git"
  },
  "keywords": [
    "TI",
    "SensorTag"
  ],
  "author": {
    "name": "Sandeep Mistry"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "noble-device": "^1.1.0"
  },
  "devDependencies": {
    "async": "~0.2.7",
    "jshint": "~1.1.0"
  },
  "readme": "# node-sensortag\n\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/sandeepmistry/node-sensortag?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nNode.js lib for the [TI SensorTag](http://www.ti.com/tool/cc2541dk-sensor) and [TI CC2650 SensorTag](http://www.ti.com/tool/cc2650stk)\n\n## Prerequisites\n\n * [node-gyp install guide](https://github.com/nodejs/node-gyp#installation)\n * [noble prerequisites](https://github.com/sandeepmistry/noble#prerequisites)\n\n## Install\n\n```sh\nnpm install sensortag\n```\n\n## Examples\n\nSee [test.js](test.js) or [sensorTag folder in Tom Igoe's BluetoothLE-Examples repo ](https://github.com/tigoe/BluetoothLE-Examples/tree/master/sensorTag)\n\n## Usage\n\n```javascript\nvar SensorTag = require('sensortag');\n```\n\n### Discover\n\n#### One\n\n```javascript\nSensorTag.discover(callback(sensorTag));\n```\n\n#### All\n\n```javascript\nfunction onDiscover(sensorTag) {\n  // ...\n}\n\nSensorTag.discoverAll(onDiscover);\n\nSensorTag.stopDiscoverAll(onDiscover);\n```\n\n#### By id\n\n```javascript\nSensorTag.discoverById(id, callback(sensorTag));\n```\n\n#### By address\n\n```javascript\nSensorTag.discoverByAddress(address, callback(sensorTag));\n```\n\n#### Properties:\n\n```javascript\nsensorTag = {\n  id: \"<peripheral id>\",\n  type: \"cc2540\" | \"cc2650\"\n}\n```\n\n### Connect and Set Up\n\n```javascript\nsensorTag.connectAndSetUp(callback(error));\n```\n\n### Disconnect\n\n```javascript\nsensorTag.disconnect(callback);\n```\n\n### Device Info\n\n```javascript\nsensorTag.readDeviceName(callback(error, deviceName));\n\nsensorTag.readSystemId(callback(error, systemId));\n\nsensorTag.readSerialNumber(callback(error, serialNumber));\n\nsensorTag.readFirmwareRevision(callback(error, firmwareRevision));\n\nsensorTag.readHardwareRevision(callback(error, hardwareRevision));\n\nsensorTag.readSoftwareRevision(callback(error, softwareRevision));\n\nsensorTag.readManufacturerName(callback(error, manufacturerName));\n```\n\n### IR Temperature Sensor\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableIrTemperature(callback(error));\n\nsensorTag.disableIrTemperature(callback(error));\n\nsensorTag.setIrTemperaturePeriod(period, callback(error)); // period min 300ms, default period is 1000 ms\n```\n\n#### Read\n\n```javascript\nsensorTag.readIrTemperature(callback(error, objectTemperature, ambientTemperature));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyIrTemperature(callback(error));\n\nsensorTag.unnotifyIrTemperature(callback(error));\n\nsensorTag.on('irTemperatureChange', callback(objectTemperature, ambientTemperature));\n```\n\n### Accelerometer\n\n#### Enable/disable/configure\n\n```javascript\nsensorTag.enableAccelerometer(callback(error));\n\nsensorTag.disableAccelerometer(callback(error));\n\n// CC2540: period 1 - 2550 ms, default period is 2000 ms\n// CC2650: period 100 - 2550 ms, default period is 1000 ms\nsensorTag.setAccelerometerPeriod(period, callback(error));\n```\n\n#### Read\n\n```javascript\nsensorTag.readAccelerometer(callback(error, x, y, z));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyAccelerometer(callback(error));\n\nsensorTag.unnotifyAccelerometer(callback(error));\n\nsensorTag.on('accelerometerChange', callback(x, y, z));\n```\n\n### Humidity Sensor\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableHumidity(callback(error));\n\nsensorTag.disableHumidity(callback(error));\n\nsensorTag.setHumidityPeriod(period, callback(error));\n```\n\n#### Read\n\n```javascript\nsensorTag.readHumidity(callback(error, temperature, humidity));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyHumidity(callback(error));\n\nsensorTag.unnotifyHumidity(callback(error));\n\nsensorTag.on('humidityChange', callback(temperature, humidity));\n```\n\n### Magnetometer\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableMagnetometer(callback(error));\n\nsensorTag.disableMagnetometer(callback(error));\n\n// CC2540: period 1 - 2550 ms, default period is 2000 ms\n// CC2650: period 100 - 2550 ms, default period is 1000 ms\nsensorTag.setMagnetometerPeriod(period, callback(error));\n```\n\n#### Read\n\n```javascript\nsensorTag.readMagnetometer(callback(error, x, y, z));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyMagnetometer(callback(error));\n\nsensorTag.unnotifyMagnetometer(callback(error));\n\nsensorTag.on('magnetometerChange', callback(x, y, z));\n```\n\n### Barometric Pressure Sensor\n\n#### Enable/disable\n\n```javascript\nsensorTag.enableBarometricPressure(callback(error));\n\nsensorTag.disableBarometricPressure(callback(error));\n\nsensorTag.setBarometricPressurePeriod(period, callback(error)); // period 100 - 2550 ms\n```\n\n#### Read\n\n```javascript\nsensorTag.readBarometricPressure(callback(error, pressure));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyBarometricPressure(callback(error));\n\nsensorTag.unnotifyBarometricPressure(callback(error));\n\nsensorTag.on('barometricPressureChange', callback(pressure));\n```\n\n### Gyroscope\n\n#### Enable/disable/configure\n\n```javascript\nsensorTag.enableGyroscope(callback(error));\n\nsensorTag.disableGyroscope(callback(error));\n\n// period 100 - 2550 ms, default period is 1000 ms\nsensorTag.setGyroscopePeriod(period, callback(error));\n```\n\n#### Read\n\n```javascript\nsensorTag.readGyroscope(callback(error, x, y, z));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyGyroscope(callback(error));\n\nsensorTag.unnotifyGyroscope(callback(error));\n\nsensorTag.on('gyroscopeChange', callback(x, y, z));\n```\n\n### IO (CC2650 only)\n\n#### Data read/write\n\n```javascript\nsensorTag.readIoData(callback(error, value));\nsensorTag.writeIoData(value, callback(error));\n```\n\n#### Config read/write\n\n```javascript\nsensorTag.readIoConfig(callback(error, value));\nsensorTag.writeIoConfig(value, callback(error));\n```\n\n### Luxometer (CC2650 only)\n\n#### Enable/disable/configure\n\n```javascript\nsensorTag.enableLuxometer(callback(error));\n\nsensorTag.disableLuxometer(callback(error));\n\nsensorTag.setLuxometerPeriod(period, callback(error));\n```\n\n#### Read\n\n```javascript\nsensorTag.readLuxometer(callback(error, lux));\n```\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifyLuxometer(callback(error));\n\nsensorTag.unnotifyLuxometer(callback(error));\n\nsensorTag.on('luxometerChange', callback(lux));\n```\n\n### Simple Key\n\n#### Notify/Unnotify\n\n```javascript\nsensorTag.notifySimpleKey(callback(error));\n\nsensorTag.unnotifySimpleKey(callback(error));\n```\n\nCC2540:\n\n```javascript\nsensorTag.on('simpleKeyChange', callback(left, right));\n```\n\nCC2650:\n\n```javascript\nsensorTag.on('simpleKeyChange', callback(left, right, reedRelay));\n```\n\n[![Analytics](https://ga-beacon.appspot.com/UA-56089547-1/sandeepmistry/node-sensortag?pixel)](https://github.com/igrigorik/ga-beacon)\n",
  "bugs": {
    "url": "https://github.com/sandeepmistry/node-sensortag/issues"
  },
  "homepage": "https://github.com/sandeepmistry/node-sensortag#readme",
  "_id": "sensortag@1.2.2",
  "_from": "sensortag@latest"
}
